[{"path":"/articles/intro.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction to headliner","text":"can install dev version headliner github :","code":"devtools::install_github(\"rjake/headliner\")"},{"path":"/articles/intro.html","id":"installation-1","dir":"Articles","previous_headings":"Installation","what":"Installation","title":"Introduction to headliner","text":"examples, use function called demo_data() build data set based current date (last run 12/14/22).","code":"library(headliner) library(dplyr) demo_data() #> # A tibble: 10 × 5 #>    group sales count on_sale date       #>    <chr> <dbl> <dbl>   <dbl> <date>     #>  1 a       101    35       1 2022-12-14 #>  2 a       102    34       0 2022-10-14 #>  3 b       103    33       1 2022-08-14 #>  4 b       104    32       0 2022-06-14 #>  5 c       105    31       1 2022-04-14 #>  6 c       106    30       0 2022-02-14 #>  7 d       107    29       1 2021-12-14 #>  8 d       108    28       0 2021-10-14 #>  9 e       109    27       1 2021-08-14 #> 10 e       110    26       0 2021-06-14"},{"path":"/articles/intro.html","id":"a-simple-headline","dir":"Articles","previous_headings":"Installation","what":"A simple headline","title":"Introduction to headliner","text":"want say something like : can look data see 12 months ago, sales 107 today 101. can give values headline() get simple phrase see sentence constructed, can look components used hood. return_data = TRUE returns named list. condense view_list()","code":"#> We have seen a 5.6% decrease compared to the same time last year (101 vs. 107). headline(   x = 101,    y = 107 ) #> decrease of 6 (101 vs. 107) headline(101, 107, return_data = TRUE) |>    view_list() #>                                           value #> headline            decrease of 6 (101 vs. 107) #> x                                           101 #> y                                           107 #> delta                                         6 #> delta_p                                     5.6 #> article_delta                               a 6 #> article_delta_p                           a 5.6 #> raw_delta                                    -6 #> raw_delta_p                                -5.6 #> article_raw_delta                          a -6 #> article_raw_delta_p                      a -5.6 #> sign                                         -1 #> orig_values                         101 vs. 107 #> trend                                  decrease"},{"path":"/articles/intro.html","id":"a-custom-headline","dir":"Articles","previous_headings":"Installation","what":"A custom headline","title":"Introduction to headliner","text":"can compose like using glue::glue() syntax might noticed multiple article_* components available. article_delta difference two values (“6 person loss” vs “8 person loss”), article_delta_p percentage difference “5.6%” vs “8.6%”. can also add articles words using add_article(). example add_artice(\"increase\") gives us “increase” vs add_artice(\"decrease\") “decrease”.","code":"headline(   x = 101,    y = 107,    headline = \"We have seen {article_delta_p}% {trend} compared to the same time last year ({orig_values}).\" ) #> We have seen a 5.6% decrease compared to the same time last year (101 vs. 107)."},{"path":"/articles/intro.html","id":"helpers-for-dynamic-calculations","dir":"Articles","previous_headings":"Installation","what":"Helpers for dynamic calculations","title":"Introduction to headliner","text":"let’s see can make calculations dynamic… First, can use function called add_date_columns() calculate distances current date (reference date specified) values date column . new fields can see 10/14/22 61 days ago (9 weeks 2 months, …) current date. can identify conditions group interest (x) reference group (y). step uses kind logic use dplyr::filter() base::subset() + logic used dplyr::across() argument lst(mean) equivalent writing list(mean = mean). name (left side) name column, right side function use. used .fns = list(avg = mean) names avg_sales_x avg_sales_y used mean() calculation. compare_conditions() uses mean default, ’ll omit going forward. may want steps data frame want go right headline, can use headline_list(). Another good option adding headlines data frames add_headline_column() (see next section) result 2 values, can specify values need calling names compare_conditions() can also used compare categorical criteria.","code":"demo_data() |>   add_date_columns(date_col = date) #> # A tibble: 10 × 11 #>    group sales count on_sale date         day  week month quarter calendar_year #>    <chr> <dbl> <dbl>   <dbl> <date>     <dbl> <dbl> <dbl>   <dbl>         <dbl> #>  1 a       101    35       1 2022-12-14     0     0     0       0             0 #>  2 a       102    34       0 2022-10-14   -61    -9    -2       0             0 #>  3 b       103    33       1 2022-08-14  -122   -18    -4      -1             0 #>  4 b       104    32       0 2022-06-14  -183   -26    -6      -2             0 #>  5 c       105    31       1 2022-04-14  -244   -35    -8      -2             0 #>  6 c       106    30       0 2022-02-14  -303   -43   -10      -3             0 #>  7 d       107    29       1 2021-12-14  -365   -52   -12      -4            -1 #>  8 d       108    28       0 2021-10-14  -426   -61   -14      -4            -1 #>  9 e       109    27       1 2021-08-14  -487   -70   -16      -5            -1 #> 10 e       110    26       0 2021-06-14  -548   -78   -18      -6            -1 #> # … with 1 more variable: fiscal_year <dbl> yoy <- # year over year   demo_data() |>   add_date_columns(date) |>    compare_conditions(     x = (month == 0),   # this month     y = (month == -12), # vs 12 months ago     .cols = sales,   # the column(s) to aggregate     .fns = lst(mean)    # the list of functions passed to summarise(across(...))   )  yoy #> # A tibble: 1 × 2 #>   mean_sales_x mean_sales_y #>          <dbl>        <dbl> #> 1          101          107 yoy |>    headline_list(     headline = \"We have seen {article_delta_p}% {trend} compared to the same time last year ({orig_values}).\"   )  #> We have seen a 5.6% decrease compared to the same time last year (101 vs. 107). car_stats <-   mtcars |>    compare_conditions(     x = cyl == 4,     y = cyl > 4,     .cols = starts_with(\"d\"),     .fns = list(avg = mean, min = min)   )  view_list(car_stats) #>                 value #> avg_disp_x 105.136364 #> avg_disp_y 296.504762 #> avg_drat_x   4.070909 #> avg_drat_y   3.348095 #> min_disp_x  71.100000 #> min_disp_y 145.000000 #> min_drat_x   3.690000 #> min_drat_y   2.760000  car_stats |>   headline_list(     x = avg_disp_x,     y = avg_disp_y,     headline = \"Difference in avg. displacement of {delta}cu.in. ({orig_values})\"   ) #> Difference in avg. displacement of 191.4cu.in. (105.1 vs. 296.5)  car_stats |>   headline_list(     x = avg_drat_x,     y = avg_drat_y,     headline = \"Difference in avg. rear axle ratio of {delta} ({orig_values})\"   ) #> Difference in avg. rear axle ratio of 0.7 (4.1 vs. 3.3) pixar_films |>    compare_conditions(     rating == \"G\",      rating == \"PG\",      .cols = rotten_tomatoes   ) |>    headline_list(     headline =        \"Metacritic has an avg. rating of {x} for G-rated films and {y} for PG-rated films \\\\     ({delta} points {trend})\",     trend_phrases = trend_terms(more = \"higher\",  less = \"lower\"),     n_decimal = 0   ) #> Metacritic has an avg. rating of 87 for G-rated films and 91 for PG-rated films (4 points lower)   demo_data() |>   compare_conditions(     x = group == \"a\",     y = group == \"c\",     .cols = c(sales),     .fns = sum   ) |>    headline_list(     headline = \"Group A is ${delta} {trend} Group C (${x} vs ${y})\",     trend_phrases = trend_terms(more = \"ahead\",  less = \"behind\")   ) #> Group A is $8 behind Group C ($203 vs $211)"},{"path":"/articles/intro.html","id":"within-a-data-frame","dir":"Articles","previous_headings":"Installation","what":"Within a data frame","title":"Introduction to headliner","text":"can also use add_headline_column() append column data frame headlines describing row. can reference existing columns headline can bring back specific talking points using return_cols =. can use find interesting phrases.","code":"pixar_films |>    select(film, rotten_tomatoes, metacritic) |>    add_headline_column(     x = rotten_tomatoes,      y = metacritic,     headline = \"{film} had a difference of {delta} points\",     return_cols = c(delta)   ) |>    arrange(desc(delta)) #> # A tibble: 22 × 5 #>    film                rotten_tomatoes metacritic headline                 delta #>    <chr>                         <dbl>      <dbl> <chr>                    <dbl> #>  1 Onward                           88         61 Onward had a difference…    27 #>  2 Monsters, Inc.                   96         79 Monsters, Inc. had a di…    17 #>  3 Cars 2                           40         57 Cars 2 had a difference…    17 #>  4 Finding Dory                     94         77 Finding Dory had a diff…    17 #>  5 Coco                             97         81 Coco had a difference o…    16 #>  6 A Bug's Life                     92         77 A Bug's Life had a diff…    15 #>  7 Monsters University              80         65 Monsters University had…    15 #>  8 Incredibles 2                    93         80 Incredibles 2 had a dif…    13 #>  9 Toy Story 4                      97         84 Toy Story 4 had a diffe…    13 #> 10 Toy Story 2                     100         88 Toy Story 2 had a diffe…    12 #> # … with 12 more rows"},{"path":"/articles/intro.html","id":"adding-plural-phrasing-multiple-trend-terms","dir":"Articles","previous_headings":"Installation","what":"Adding plural phrasing & multiple trend terms","title":"Introduction to headliner","text":"can add phrases customize sentences. plural_phrases() allows add new variables list components available. adding {people} use headline. can actually pass multiple trend_terms() plural_phrasing() options.","code":"headline(   x = 9,   y = 10,   headline = \"{delta_p}% {trend} ({delta} {people})\",   plural_phrases = list(       people = plural_phrasing(single = \"person\", multi = \"people\")   ) ) #> 10% decrease (1 person) # lists to use more_less <-    list(     an_increase = trend_terms(\"an increase\", \"a decrease\"),      more = trend_terms(more = \"more\", less = \"less\")   )  are_people <-   list(     are = plural_phrasing(single = \"is\", multi = \"are\"),     people = plural_phrasing(single = \"person\", multi = \"people\")   )  # notice the difference in these two outputs headline(   x = 25,    y = 23,   headline = \"There {are} {delta} {more} {people} ({an_increase} of {delta_p}%)\",   trend_phrases = more_less,   plural_phrases = are_people ) #> There are 2 more people (an increase of 8.7%)  headline(   x = 25,    y = 26,   headline = \"There {are} {delta} {more} {people} ({an_increase} of {delta_p}%)\",   trend_phrases = more_less,   plural_phrases = are_people ) #> There is 1 less person (a decrease of 3.8%)"},{"path":"/articles/intro.html","id":"when-theres-no-change","dir":"Articles","previous_headings":"Installation","what":"When there’s no change","title":"Introduction to headliner","text":"can also adjust text numbers ","code":"headline(3, 3) #> There was no difference  headline(3, 3, if_match = \"There were no additional applicants ({x} total)\") #> There were no additional applicants (3 total)"},{"path":"/articles/intro.html","id":"an-example-with-valuebox","dir":"Articles","previous_headings":"Installation","what":"An example with valueBox()","title":"Introduction to headliner","text":"’s example uses headliner create valueBox() shiny dynamic colors text.","code":"show <- compare_values(101, 107) box_color <- ifelse(show$sign == -1, \"red\", \"blue\")  valueBox(   value =      headline(       show$x,        show$y,        headline = \"{delta_p}% {trend}\"     ),   subtitle = \"vs. the same time last year\",   color = box_color )"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jake Riley. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Riley J (2022). headliner: Compose Sentences Describe Comparisons. R package version 0.0.3, https://github.com/rjake/headliner.","code":"@Manual{,   title = {headliner: Compose Sentences to Describe Comparisons},   author = {Jake Riley},   year = {2022},   note = {R package version 0.0.3},   url = {https://github.com/rjake/headliner}, }"},{"path":[]},{"path":"/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to headliner","title":"Contributing to headliner","text":"outlines propose change headliner. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to headliner","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to headliner","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to headliner","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"\", fork = TRUE). Install development dependences devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to headliner","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to headliner","text":"Please note headliner project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"/index.html","id":"headliner-","dir":"","previous_headings":"","what":"Compose Sentences to Describe Comparisons","title":"Compose Sentences to Describe Comparisons","text":"goal headliner translate facts insights. Given two values, headliner generates building blocks creating dynamic text. talking points can combined using using glue syntax add informative titles plots, section headers text report.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Compose Sentences to Describe Comparisons","text":"can install dev version headliner github : Let’s look talking points difference 5 7: can string talking points together like : See longer introduction.","code":"devtools::install_github(\"rjake/headliner\") library(headliner)  compare_values(5, 7) |> # returns a list   view_list() # show as a data frame #>                        value #> x                          5 #> y                          7 #> delta                      2 #> delta_p                 28.6 #> article_delta            a 2 #> article_delta_p       a 28.6 #> raw_delta                 -2 #> raw_delta_p            -28.6 #> article_raw_delta       a -2 #> article_raw_delta_p  a -28.6 #> sign                      -1 #> orig_values          5 vs. 7 #> trend               decrease headline(   x = 5,    y = 7,    headline = \"There was {article_delta_p}% {trend} ({orig_values})\" ) #> There was a 28.6% decrease (5 vs. 7)"},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Jake Riley Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/reference/add_article.html","id":null,"dir":"Reference","previous_headings":"","what":"Append a/an to word — add_article","title":"Append a/an to word — add_article","text":"Append /word","code":""},{"path":"/reference/add_article.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append a/an to word — add_article","text":"","code":"add_article(x)"},{"path":"/reference/add_article.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append a/an to word — add_article","text":"x string numeric value","code":""},{"path":"/reference/add_article.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append a/an to word — add_article","text":"Returns vector length input.","code":""},{"path":"/reference/add_article.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Append a/an to word — add_article","text":"function uses crude logic append '' '' numbers phrases. words start aeiou negative numbers always start '', ex: '-3' '-8' decimals always start '' ex: 0.4 usually pronounced 'zero point four' 'point four' numbers starting 8 always '' integer comes thousand million 11 18 '' 18,000 becomes 18 becomes '18' integer comes thousand million 1, 10, 12, 13, 14, 15, 16, 17, 19 '' 15,500 becomes 15 becomes '15' otherwise ''","code":""},{"path":"/reference/add_article.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Append a/an to word — add_article","text":"","code":"add_article(\"increase\") #> [1] \"an increase\"  add_article(\"decrease\") #> [1] \"a decrease\"  add_article(c(1, 8, 10, 11, 18, 20, 80)) #> [1] \"a 1\"   \"an 8\"  \"a 10\"  \"an 11\" \"an 18\" \"a 20\"  \"an 80\"  add_article(18123) #> [1] \"an 18123\"  stats::setNames(   add_article(1.8 * 10^(1:7)),   prettyNum(1.8 * 10^(1:7), big.mark = \",\") ) #>           18          180        1,800       18,000      180,000    1,800,000  #>      \"an 18\"      \"a 180\"     \"a 1800\"   \"an 18000\"   \"a 180000\"  \"a 1800000\"  #>      1.8e+07  #> \"an 1.8e+07\""},{"path":"/reference/add_date_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Add columns with date calculations based on reference date — add_date_columns","title":"Add columns with date calculations based on reference date — add_date_columns","text":"Using reference date (defaults current date), columns appended data set describing number days, weeks, months, quarters, calendar years fiscal years since reference date. new columns share names existing column, function show warning.","code":""},{"path":"/reference/add_date_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add columns with date calculations based on reference date — add_date_columns","text":"","code":"add_date_columns(   df,   date_col,   ref_date = Sys.Date(),   fiscal_year_offset = 6,   week_start = 1,   drop = FALSE )"},{"path":"/reference/add_date_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add columns with date calculations based on reference date — add_date_columns","text":"df data frame date_col column class 'date' ref_date reference date calculations, defaults current date fiscal_year_offset number months offset date, fiscal year ends June, use 6 week_start integer start week Monday = 1 Sunday = 7 drop generated fields may match input data frame. TRUE, original columns removed replaced new field name. Otherwise, columns name appended '1'","code":""},{"path":"/reference/add_date_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add columns with date calculations based on reference date — add_date_columns","text":"Returns data frame columns appended describe date distances reference date.","code":""},{"path":"/reference/add_date_columns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add columns with date calculations based on reference date — add_date_columns","text":"","code":"demo_data() |>   add_date_columns(date_col = date) #> # A tibble: 10 × 11 #>    group sales count on_sale date         day  week month quarter calendar_year #>    <chr> <dbl> <dbl>   <dbl> <date>     <dbl> <dbl> <dbl>   <dbl>         <dbl> #>  1 a       101    35       1 2022-12-14     0     0     0       0             0 #>  2 a       102    34       0 2022-10-14   -61    -9    -2       0             0 #>  3 b       103    33       1 2022-08-14  -122   -18    -4      -1             0 #>  4 b       104    32       0 2022-06-14  -183   -26    -6      -2             0 #>  5 c       105    31       1 2022-04-14  -244   -35    -8      -2             0 #>  6 c       106    30       0 2022-02-14  -303   -43   -10      -3             0 #>  7 d       107    29       1 2021-12-14  -365   -52   -12      -4            -1 #>  8 d       108    28       0 2021-10-14  -426   -61   -14      -4            -1 #>  9 e       109    27       1 2021-08-14  -487   -70   -16      -5            -1 #> 10 e       110    26       0 2021-06-14  -548   -78   -18      -6            -1 #> # … with 1 more variable: fiscal_year <dbl>  # if columns overlap, you will see a warning demo_data() |>   dplyr::mutate(week = 1) |>   add_date_columns(date_col = date) #> Warning: This step produced duplicate names and some fields have new names (see above)  #> Use 'drop = TRUE' to remove the overlapping columns prior to adding the new date fields #> New names: #> • `week` -> `week...6` #> • `week` -> `week...8` #> # A tibble: 10 × 12 #>    group sales count on_sale date       week...6   day week...8 month quarter #>    <chr> <dbl> <dbl>   <dbl> <date>        <dbl> <dbl>    <dbl> <dbl>   <dbl> #>  1 a       101    35       1 2022-12-14        1     0        0     0       0 #>  2 a       102    34       0 2022-10-14        1   -61       -9    -2       0 #>  3 b       103    33       1 2022-08-14        1  -122      -18    -4      -1 #>  4 b       104    32       0 2022-06-14        1  -183      -26    -6      -2 #>  5 c       105    31       1 2022-04-14        1  -244      -35    -8      -2 #>  6 c       106    30       0 2022-02-14        1  -303      -43   -10      -3 #>  7 d       107    29       1 2021-12-14        1  -365      -52   -12      -4 #>  8 d       108    28       0 2021-10-14        1  -426      -61   -14      -4 #>  9 e       109    27       1 2021-08-14        1  -487      -70   -16      -5 #> 10 e       110    26       0 2021-06-14        1  -548      -78   -18      -6 #> # … with 2 more variables: calendar_year <dbl>, fiscal_year <dbl>  # to drop the old column and keep the new column use `drop = TRUE` demo_data() |>   dplyr::mutate(week = 1) |>   add_date_columns(date_col = date, drop = TRUE) #> # A tibble: 10 × 11 #>    group sales count on_sale date         day  week month quarter calendar_year #>    <chr> <dbl> <dbl>   <dbl> <date>     <dbl> <dbl> <dbl>   <dbl>         <dbl> #>  1 a       101    35       1 2022-12-14     0     0     0       0             0 #>  2 a       102    34       0 2022-10-14   -61    -9    -2       0             0 #>  3 b       103    33       1 2022-08-14  -122   -18    -4      -1             0 #>  4 b       104    32       0 2022-06-14  -183   -26    -6      -2             0 #>  5 c       105    31       1 2022-04-14  -244   -35    -8      -2             0 #>  6 c       106    30       0 2022-02-14  -303   -43   -10      -3             0 #>  7 d       107    29       1 2021-12-14  -365   -52   -12      -4            -1 #>  8 d       108    28       0 2021-10-14  -426   -61   -14      -4            -1 #>  9 e       109    27       1 2021-08-14  -487   -70   -16      -5            -1 #> 10 e       110    26       0 2021-06-14  -548   -78   -18      -6            -1 #> # … with 1 more variable: fiscal_year <dbl>"},{"path":"/reference/add_headline_column.html","id":null,"dir":"Reference","previous_headings":"","what":"Add column of headlines — add_headline_column","title":"Add column of headlines — add_headline_column","text":"works similar headline() acts returns data frame.","code":""},{"path":"/reference/add_headline_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add column of headlines — add_headline_column","text":"","code":"add_headline_column(   df,   x,   y,   headline = \"{trend} of {delta} ({orig_values})\",   ...,   .name = \"headline\",   if_match = \"There was no difference\",   trend_phrases = headliner::trend_terms(),   plural_phrases = NULL,   orig_values = \"{x} vs. {y}\",   n_decimal = 1,   round_all = TRUE,   multiplier = 1,   return_cols = .name )"},{"path":"/reference/add_headline_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add column of headlines — add_headline_column","text":"df data frame, must single row x numeric value compare reference value 'y' y numeric value act control 'x' value headline string format final output. Uses glue syntax ... arguments passed glue_data .name string value name new column create if_match string display numbers match, uses glue syntax trend_phrases list values use x y x less y. can pass just trend_terms (default) call result \"...{trend}...\" pass named list (see examples) plural_phrases named list values use difference (delta) singular (delta = 1) plural (delta != 1) orig_values string using glue syntax. example: ({x} vs {y}) n_decimal numeric value limit number decimal places returned values. round_all logical value indicate values rounded. FALSE, values return modification. TRUE (default) values round length specified 'n_decimal'. multiplier number indicating scaling factor. multiplier = 1 (default), 0.25 return 0.25. multiplier = 100, 0.25 return 25. return_cols arguments can passed select, ex: c(\"\", \"b\"), starts_with, etc.","code":""},{"path":"/reference/add_headline_column.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add column of headlines — add_headline_column","text":"Returns original data frame columns appended.","code":""},{"path":"/reference/add_headline_column.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add column of headlines — add_headline_column","text":"nice function can return \"talking points\" used headline calculation. example, want find extreme headlines, can use add_headline_column(..., return_cols = delta) bring back headline column well delta talking point (absolute difference x y). result, can sort descending order filter biggest difference.","code":""},{"path":"/reference/add_headline_column.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add column of headlines — add_headline_column","text":"","code":"# You can use 'add_headline_column()' to reference values in an existing data set. # Here is an example comparing the box office sales of different Pixar films head(pixar_films) |>   dplyr::select(film, bo_domestic, bo_intl) |>   add_headline_column(     x = bo_domestic,     y = bo_intl,     headline = \"{film} was ${delta}M higher {trend} (${x}M vs ${y}M)\",     trend_phrases = trend_terms(more = \"domestically\", less = \"internationally\")   ) |>   knitr::kable(\"pandoc\") #>  #>  #> film               bo_domestic   bo_intl  headline                                                                 #> ----------------  ------------  --------  ------------------------------------------------------------------------ #> Toy Story                191.8     181.8  Toy Story was $10M higher domestically ($191.8M vs $181.8M)              #> A Bug's Life             162.8     200.5  A Bug's Life was $37.7M higher internationally ($162.8M vs $200.5M)      #> Toy Story 2              245.9     251.5  Toy Story 2 was $5.6M higher internationally ($245.9M vs $251.5M)        #> Monsters, Inc.           289.9     342.4  Monsters, Inc. was $52.5M higher internationally ($289.9M vs $342.4M)    #> Finding Nemo             339.7     531.3  Finding Nemo was $191.6M higher internationally ($339.7M vs $531.3M)     #> The Incredibles          261.4     370.2  The Incredibles was $108.8M higher internationally ($261.4M vs $370.2M)   # You can also use 'return_cols' to return any and all \"talking points\". # You can use tidyselect helpers like 'starts_with(\"delta\")' or # 'everything()'. In this example, I returned the 'raw_delta' & 'trend' columns # and then identified the records at the extremes pixar_films |>   dplyr::select(film, bo_domestic, bo_intl) |>   add_headline_column(     x = bo_domestic,     y = bo_intl,     headline = \"${delta}M {trend} (${x}M vs ${y}M)\",     trend_phrases = trend_terms(more = \"higher\", less = \"lower\"),     return_cols = c(raw_delta, trend)   ) |>   dplyr::filter(raw_delta %in% range(raw_delta)) |>   knitr::kable(\"pandoc\") #>  #>  #> film    bo_domestic   bo_intl  headline                              raw_delta  trend   #> -----  ------------  --------  -----------------------------------  ----------  ------- #> Cars          244.1     217.9  $26.2M higher ($244.1M vs $217.9M)         26.2  higher  #> Coco          209.7     597.4  $387.7M lower ($209.7M vs $597.4M)       -387.7  lower"},{"path":"/reference/compare_conditions.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare two conditions within a data frame — compare_conditions","title":"Compare two conditions within a data frame — compare_conditions","text":"Using logic filter can interpret, compare_conditions() summarize data aggregating condition x condition y","code":""},{"path":"/reference/compare_conditions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare two conditions within a data frame — compare_conditions","text":"","code":"compare_conditions(df, x, y, .cols = everything(), .fns = lst(mean))"},{"path":"/reference/compare_conditions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare two conditions within a data frame — compare_conditions","text":"df data frame x condition comparison, criteria use 'dplyr::filter', used contrast reference group 'y' y condition comparison, criteria use 'dplyr::filter', used contrast reference group 'x' .cols columns use comparison .fns named list functions use, ex: list(avg = mean, sd = sd) 'purrr' style phrases also supported like list(mean = ~mean(.x, na.rm = TRUE), sd = sd) dplyr::lst(mean, sd) create list(mean = mean, sd = sd)","code":""},{"path":"/reference/compare_conditions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare two conditions within a data frame — compare_conditions","text":"Returns data frame either 1 row, grouped, 1 row per group.","code":""},{"path":"/reference/compare_conditions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare two conditions within a data frame — compare_conditions","text":"compare_conditions() passes arguments across. .cols .fns work . clarity, helpful use lst function .fns parameter. Using compare_conditions(..., .cols = my_var, .fns = lst(mean, sd)) return values mean_my_var_x, mean_my_var_y, sd_my_var_x sd_my_var_x","code":""},{"path":"/reference/compare_conditions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare two conditions within a data frame — compare_conditions","text":"","code":"# compare_conditions works similar to dplyr::across() pixar_films |>   compare_conditions(     x = (rating == \"G\"),     y = (rating == \"PG\"),     .cols = rotten_tomatoes   ) #> # A tibble: 1 × 2 #>   mean_rotten_tomatoes_x mean_rotten_tomatoes_y #>                    <dbl>                  <dbl> #> 1                   87.4                     91   # because data frames are just fancy lists, you pass the result to headline_list() pixar_films |>   compare_conditions(     x = (rating == \"G\"),     y = (rating == \"PG\"),     .cols = rotten_tomatoes   ) |>  headline_list(\"a difference of {delta} points\") #> a difference of 3.6 points    # you can return multiple objects to compare  # 'view_List()' is a helper to see list objects in a compact way  pixar_films |>   compare_conditions(     x = (rating == \"G\"),     y = (rating == \"PG\"),     .cols = c(rotten_tomatoes, metacritic),     .fns = dplyr::lst(mean, sd)   ) |>   view_list() #>                            value #> mean_metacritic_x      80.769231 #> mean_metacritic_y      78.444444 #> mean_rotten_tomatoes_x 87.384615 #> mean_rotten_tomatoes_y 91.000000 #> sd_metacritic_x        13.772883 #> sd_metacritic_y        11.325978 #> sd_rotten_tomatoes_x   17.566723 #> sd_rotten_tomatoes_y    8.558621   # you can use any of the `tidyselect` helpers pixar_films |>   compare_conditions(     x = (rating == \"G\"),     y = (rating == \"PG\"),     .cols = dplyr::starts_with(\"bo_\")   ) #> # A tibble: 1 × 4 #>   mean_bo_domestic_x mean_bo_domestic_y mean_bo_intl_x mean_bo_intl_y #>                <dbl>              <dbl>          <dbl>          <dbl> #> 1               259.               293.           370.           409.   # if you want to compare x to the overall average, use y = TRUE pixar_films |>   compare_conditions(     x = (rating == \"G\"),     y = TRUE,     .cols = rotten_tomatoes   ) #> # A tibble: 1 × 2 #>   mean_rotten_tomatoes_x mean_rotten_tomatoes_y #>                    <dbl>                  <dbl> #> 1                   87.4                   88.9   # to get the # of observations use length() instead of n() # note: don't pass the parentheses pixar_films |>   compare_conditions(     x = (rating == \"G\"),     y = (rating == \"PG\"),     .cols = rotten_tomatoes, # can put anything here really     .fns = list(n = length)   ) #> # A tibble: 1 × 2 #>   n_rotten_tomatoes_x n_rotten_tomatoes_y #>                 <int>               <int> #> 1                  13                   9   # you can also use purrr-style lambdas pixar_films |>   compare_conditions(     x = (rating == \"G\"),     y = (rating == \"PG\"),     .cols = rotten_tomatoes,     .fns = list(avg = ~ sum(.x) / length(.x))   ) #> # A tibble: 1 × 2 #>   avg_rotten_tomatoes_x avg_rotten_tomatoes_y #>                   <dbl>                 <dbl> #> 1                  87.4                    91  # you can compare categorical data with functions like dplyr::n_distinct() pixar_films |>   compare_conditions(     x = (rating == \"G\"),     y = (rating == \"PG\"),     .cols = film,     .fns = list(distinct = dplyr::n_distinct)   ) #> # A tibble: 1 × 2 #>   distinct_film_x distinct_film_y #>             <int>           <int> #> 1              13               9"},{"path":"/reference/compare_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare two values and get talking points — compare_values","title":"Compare two values and get talking points — compare_values","text":"function create \"talking points\" describes difference two values.","code":""},{"path":"/reference/compare_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare two values and get talking points — compare_values","text":"","code":"compare_values(   x,   y,   trend_phrases = headliner::trend_terms(),   orig_values = \"{x} vs. {y}\",   plural_phrases = NULL,   n_decimal = 1,   round_all = TRUE,   multiplier = 1,   check_rounding = TRUE )"},{"path":"/reference/compare_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare two values and get talking points — compare_values","text":"x numeric value compare reference value 'y' y numeric value act control 'x' value trend_phrases list values use x y x less y. can pass just trend_terms (default) call result \"...{trend}...\" pass named list (see examples) orig_values string using glue syntax. example: ({x} vs {y}) plural_phrases named list values use difference (delta) singular (delta = 1) plural (delta != 1) n_decimal numeric value limit number decimal places returned values. round_all logical value indicate values rounded. FALSE, values return modification. TRUE (default) values round length specified 'n_decimal'. multiplier number indicating scaling factor. multiplier = 1 (default), 0.25 return 0.25. multiplier = 100, 0.25 return 25. check_rounding TRUE (default) inputs checked confirm difference zero may due rounding. Ex: 0.16 0.24 'n_decimal = 1' return 0.2. show difference, message displayed","code":""},{"path":"/reference/compare_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare two values and get talking points — compare_values","text":"compare_values() returns list object can used glue syntax","code":""},{"path":"/reference/compare_values.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare two values and get talking points — compare_values","text":"Given compare_values(x = 8, y = 10) following items returned list:","code":""},{"path":[]},{"path":"/reference/compare_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare two values and get talking points — compare_values","text":"","code":"# the values can be manually entered  compare_values(10, 8) |> head(2) #> $x #> [1] 10 #>  #> $y #> [1] 8 #>  # percent difference (10-8)/8 compare_values(10, 8)$delta_p #> [1] 25  # trend_phrases returns an object called trend if nothing is passed compare_values(10, 8)$trend #> [1] \"increase\"  # or if one argument is passed using trend_terms() compare_values(10, 8, trend_phrases = trend_terms(more = \"higher\"))$trend #> [1] \"higher\"  # if a named list is used, the objects are called by their names compare_values(   10, 8,   trend_phrases = list(     more = trend_terms(),     higher = trend_terms(\"higher\", \"lower\")   ) )$higher #> [1] \"higher\"  # a phrase about the comparison can be edited by providing glue syntax # 'c' = the 'compare' value, 'r' = 'reference' compare_values(10, 8, orig_values = \"{x} to {y} people\")$orig_values #> 10 to 8 people  # you can also adjust the rounding, although the default is 1 compare_values(0.1234, 0.4321)$orig_values #> 0.1 vs. 0.4 compare_values(0.1234, 0.4321, n_decimal = 3)$orig_values #> 0.123 vs. 0.432 # or add a multiplier compare_values(0.1234, 0.4321, multiplier = 100)$orig_values #> 12.3 vs. 43.2"},{"path":"/reference/demo_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Small data set referencing the current date — demo_data","title":"Small data set referencing the current date — demo_data","text":"Small data set referencing current date","code":""},{"path":"/reference/demo_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Small data set referencing the current date — demo_data","text":"","code":"demo_data(n = 10, by = \"-2 month\")"},{"path":"/reference/demo_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Small data set referencing the current date — demo_data","text":"n number rows return string indicating unit time dates seq.Date(..., = )","code":""},{"path":"/reference/demo_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Small data set referencing the current date — demo_data","text":"Returns data frame size n.","code":""},{"path":"/reference/demo_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Small data set referencing the current date — demo_data","text":"","code":"demo_data() #> # A tibble: 10 × 5 #>    group sales count on_sale date       #>    <chr> <dbl> <dbl>   <dbl> <date>     #>  1 a       101    35       1 2022-12-14 #>  2 a       102    34       0 2022-10-14 #>  3 b       103    33       1 2022-08-14 #>  4 b       104    32       0 2022-06-14 #>  5 c       105    31       1 2022-04-14 #>  6 c       106    30       0 2022-02-14 #>  7 d       107    29       1 2021-12-14 #>  8 d       108    28       0 2021-10-14 #>  9 e       109    27       1 2021-08-14 #> 10 e       110    26       0 2021-06-14  demo_data(n = 8, by = \"1 day\") #> # A tibble: 8 × 5 #>   group sales count on_sale date       #>   <chr> <dbl> <dbl>   <dbl> <date>     #> 1 a       101    33       1 2022-12-14 #> 2 a       102    32       0 2022-12-15 #> 3 b       103    31       1 2022-12-16 #> 4 b       104    30       0 2022-12-17 #> 5 c       105    29       1 2022-12-18 #> 6 c       106    28       0 2022-12-19 #> 7 d       107    27       1 2022-12-20 #> 8 d       108    26       0 2022-12-21"},{"path":"/reference/headline.html","id":null,"dir":"Reference","previous_headings":"","what":"Compose phrases that describe differences in the data — headline","title":"Compose phrases that describe differences in the data — headline","text":"Given two values, headline() use glue syntax string together \"talking points\". example headline(8, 10) describe difference 2 can expressed headline(8, 10, headline = \"changed {delta} ({raw_delta_p}%)\"). returns \"changed 2 (-20%)\".","code":""},{"path":"/reference/headline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compose phrases that describe differences in the data — headline","text":"","code":"headline(   x,   y,   headline = \"{trend} of {delta} ({orig_values})\",   ...,   if_match = \"There was no difference\",   trend_phrases = headliner::trend_terms(),   plural_phrases = NULL,   orig_values = \"{x} vs. {y}\",   n_decimal = 1,   round_all = TRUE,   multiplier = 1,   return_data = FALSE )  headline_list(   l,   headline = \"{trend} of {delta} ({orig_values})\",   x,   y,   ...,   if_match = \"There was no difference.\",   trend_phrases = headliner::trend_terms(),   plural_phrases = NULL,   orig_values = \"{x} vs. {y}\",   n_decimal = 1,   round_all = TRUE,   multiplier = 1,   return_data = FALSE )"},{"path":"/reference/headline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compose phrases that describe differences in the data — headline","text":"x numeric value compare reference value 'y' y numeric value act control 'x' value headline string format final output. Uses glue syntax ... arguments passed glue_data if_match string display numbers match, uses glue syntax trend_phrases list values use x y x less y. can pass just trend_terms (default) call result \"...{trend}...\" pass named list (see examples) plural_phrases named list values use difference (delta) singular (delta = 1) plural (delta != 1) orig_values string using glue syntax. example: ({x} vs {y}) n_decimal numeric value limit number decimal places returned values. round_all logical value indicate values rounded. FALSE, values return modification. TRUE (default) values round length specified 'n_decimal'. multiplier number indicating scaling factor. multiplier = 1 (default), 0.25 return 0.25. multiplier = 100, 0.25 return 25. return_data logical indicate whether function return talking points used compose headline l list values compare, named, can call name","code":""},{"path":"/reference/headline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compose phrases that describe differences in the data — headline","text":"Returns character vector length input,","code":""},{"path":"/reference/headline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compose phrases that describe differences in the data — headline","text":"headline() relies heavily glue_data. Objects can combined headline using following search path: given     delta one \"talking points\" compare_values() usually return \"2\" passed named variable delta = \"none\", headline() (really  glue_data) look first named variables, result compare_values() global environment. example , output return \"decrease xxxxxx (1 vs. 3)\"","code":"delta <- 123 headline(1, 3, delta = \"abc\")"},{"path":[]},{"path":"/reference/headline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compose phrases that describe differences in the data — headline","text":"","code":"# values can be manually entered, some headlines are provided by default headline(10, 8) #> increase of 2 (10 vs. 8) headline(8, 10) #> decrease of 2 (8 vs. 10) headline(1:3, 3:1) #> decrease of 2 (1 vs. 3) #> There was no difference #> increase of 2 (3 vs. 1)  # most likely you'll edit the headline by hand headline(   x = 10,   y = 8,   headline = \"There was a ${delta} {trend} vs last year\" ) #> There was a $2 increase vs last year  # you can also adjust the phrasing of higher/lower values headline(   x = 10,   y = 8,   headline = \"Group A was {trend} by {delta_p}%.\",   trend_phrases = trend_terms(more = \"higher\", less = \"lower\")  ) #> Group A was higher by 25%.  # a phrase about the comparion can be edited by providing glue syntax # 'c' = the 'compare' value, 'r' = 'reference' headline(10, 8, orig_values = \"{x} to {y} people\") #> increase of 2 (10 to 8 people)  # you can also add phrases for when the difference = 1 or not headline(   x = 10,   y = 8,   plural_phrases = list(     were = plural_phrasing(single = \"was\", multi = \"were\"),     people = plural_phrasing(single = \"person\", multi = \"people\")   ),   headline = \"there {were} {delta} {people}\" ) #> there were 2 people  # you can also adjust the rounding, the default is 1 headline(0.1234, 0.4321) #> decrease of 0.3 (0.1 vs. 0.4) headline(0.1234, 0.4321, n_decimal = 3) #> decrease of 0.309 (0.123 vs. 0.432) # or use a multiplier headline(0.1234, 0.4321, multiplier = 100) #> decrease of 30.9 (12.3 vs. 43.2)  # there are many components you can assemble headline(   x = 16,   y = 8,   headline = \"there was {article_delta_p}% {trend}, \\\\   {add_article(trend)} of {delta} ({orig_values})\" ) #> there was a 100% increase, an increase of 8 (16 vs. 8)   # compare_conditions() produces a one-row data frame that can be # passed to headline_list() pixar_films |>   compare_conditions(     x = (rating == \"G\"),     y = (rating == \"PG\"),     rotten_tomatoes   ) |>   headline_list(     headline = \"On average, G-rated films score {delta} points {trend} than \\\\     PG films on Rotten Tomatoes\",     trend_phrases = trend_terms(more = \"higher\", less = \"lower\")   ) #> On average, G-rated films score 3.6 points lower than PG films on Rotten Tomatoes  # if you have more than 2 list items, you can specify them by name list(   x = 1,   y = 2,   z = 3  ) |>   headline_list(     x = x,     y = z   ) #> decrease of 2 (1 vs. 3)"},{"path":"/reference/pixar_films.html","id":null,"dir":"Reference","previous_headings":"","what":"This data comes from pixarfilms\r\npackage by Eric Leung (2022) — pixar_films","title":"This data comes from pixarfilms\r\npackage by Eric Leung (2022) — pixar_films","text":"data box office sales, audience ratings, release dates Pixar film","code":""},{"path":"/reference/pixar_films.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This data comes from pixarfilms\r\npackage by Eric Leung (2022) — pixar_films","text":"","code":"pixar_films"},{"path":"/reference/pixar_films.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"This data comes from pixarfilms\r\npackage by Eric Leung (2022) — pixar_films","text":"tibble 22 rows 10 columns: order order release film name film release_date date film premiered year year film premiered run_time film length minutes film_rating rating based Motion Picture Association (MPA) film rating system rotten_tomatoes score American review-aggregation website Rotten Tomatoes; scored 100 metacritic score Metacritic scores weighted average reviews; scored 100 bo_domestic box office gross amount U.S. dollars (millions) U.S. Canada bo_intl box office gross amount U.S. dollars (millions) territories","code":""},{"path":"/reference/pixar_films.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This data comes from pixarfilms\r\npackage by Eric Leung (2022) — pixar_films","text":"","code":"pixar_films #> # A tibble: 22 × 10 #>    order film    release_…¹  year rating run_t…² rotte…³ metac…⁴ bo_do…⁵ bo_intl #>    <int> <chr>   <date>     <dbl> <chr>    <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #>  1     1 Toy St… 1995-11-22  1995 G           81     100      95    192.    182. #>  2     2 A Bug'… 1998-11-25  1998 G           95      92      77    163.    200. #>  3     3 Toy St… 1999-11-24  1999 G           92     100      88    246.    252. #>  4     4 Monste… 2001-11-02  2001 G           92      96      79    290.    342. #>  5     5 Findin… 2003-05-30  2003 G          100      99      90    340.    531. #>  6     6 The In… 2004-11-05  2004 PG         115      97      90    261.    370. #>  7     7 Cars    2006-06-09  2006 G          117      74      73    244.    218. #>  8     8 Ratato… 2007-06-29  2007 G          111      96      96    206.    417. #>  9     9 WALL-E  2008-06-27  2008 G           98      95      95    224.    298. #> 10    10 Up      2009-05-29  2009 PG          96      98      88    293     442. #> # … with 12 more rows, and abbreviated variable names ¹​release_date, ²​run_time, #> #   ³​rotten_tomatoes, ⁴​metacritic, ⁵​bo_domestic  library(ggplot2)  headline(   x = min(pixar_films$run_time),   y = max(pixar_films$run_time),   headline =     \"The shortest film was {delta} minutes less than the longest film ({orig_values} minutes)\" ) #> The shortest film was 37 minutes less than the longest film (81 vs. 118 minutes)  ggplot(pixar_films, aes(bo_intl, rating)) +   geom_boxplot() +   xlim(0, NA) +   labs(title = \"International Box Office by MPA Rating\")    ggplot(pixar_films, aes(release_date, run_time)) +   geom_line() +   geom_point() +   ylim(0, NA) +   labs(title = \"Film runtimes by release date\")    ggplot(pixar_films, aes(y = reorder(film, rotten_tomatoes))) +   geom_linerange(aes(xmin = rotten_tomatoes, xmax = metacritic), size = 2, color = \"grey85\") +   geom_point(aes(x = rotten_tomatoes, color = \"rotten_tomatoes\")) +   geom_point(aes(x = metacritic, color = \"metacritic\")) +   scale_color_manual(values = c(\"steelblue1\", \"coral2\")) +   theme_minimal(base_size = 9) +   labs(     title = \"Rotten Tomatoes vs Metacritic by film\",     color = NULL,     y = NULL,     x = \"Audience Score\"   )"},{"path":"/reference/plural_phrasing.html","id":null,"dir":"Reference","previous_headings":"","what":"List of values to use when change is plural (or singular) — plural_phrasing","title":"List of values to use when change is plural (or singular) — plural_phrasing","text":"plural_phrasing() returns list object describing value use display x - y 1 (single) one (multiple fraction). helps write \"1 person\" vs \"2 people\"","code":""},{"path":"/reference/plural_phrasing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of values to use when change is plural (or singular) — plural_phrasing","text":"","code":"plural_phrasing(single, multi)"},{"path":"/reference/plural_phrasing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of values to use when change is plural (or singular) — plural_phrasing","text":"single string use delta = 1 multi string use delta > 1","code":""},{"path":"/reference/plural_phrasing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List of values to use when change is plural (or singular) — plural_phrasing","text":"Returns list object.","code":""},{"path":"/reference/plural_phrasing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List of values to use when change is plural (or singular) — plural_phrasing","text":"plural_phrasing() primarily used headline() passed along compare_conditions(). Similar trend_terms(). Plural phrases can passed list. See examples .","code":""},{"path":"/reference/plural_phrasing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of values to use when change is plural (or singular) — plural_phrasing","text":"","code":"plural_phrasing(single = \"person\", multi = \"people\") #> $single #> [1] \"person\" #>  #> $multi #> [1] \"people\" #>   headline(   x = 1:2,   y = 0,   headline = \"a difference of {delta} {people}\",   plural_phrases = list(people = plural_phrasing(\"person\", \"people\")) ) #> a difference of 1 person #> a difference of 2 people   # a complex example passing multiple trends and plural phrases headline(   35, 30,   headline =     \"We had {an_increase} of {delta} {people}.     That is {delta} {more} {employees} \\\\     than the same time last year ({orig_values}).\",   trend_phrases = list(     an_increase = trend_terms(\"an increase\", \"a decrease\"),     more = trend_terms(\"more\", \"less\")   ),   plural_phrases =     list(       people = plural_phrasing(\"person\", \"people\"),       employees = plural_phrasing(\"employee\", \"employees\")     ) ) #> We had an increase of 5 people. #> That is 5 more employees than the same time last year (35 vs. 30)."},{"path":"/reference/trend_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Phrases for direction of difference — trend_terms","title":"Phrases for direction of difference — trend_terms","text":"trend_terms() returns list object describing values display x greater y x less y.","code":""},{"path":"/reference/trend_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Phrases for direction of difference — trend_terms","text":"","code":"trend_terms(more = \"increase\", less = \"decrease\")"},{"path":"/reference/trend_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Phrases for direction of difference — trend_terms","text":"string use x > y less string use x < y","code":""},{"path":"/reference/trend_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Phrases for direction of difference — trend_terms","text":"Returns list object.","code":""},{"path":"/reference/trend_terms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Phrases for direction of difference — trend_terms","text":"trend_terms() primarily used headline() passed along compare_conditions(). Similar plural_phrasing() Trend terms can passed list. See examples .","code":""},{"path":[]},{"path":"/reference/trend_terms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Phrases for direction of difference — trend_terms","text":"","code":"headline(   x = c(9, 11),   y = 10,   headline = \"{trend} by {delta_p}%\",   trend_phrases = trend_terms(\"higher\", \"lower\") ) #> lower by 10% #> higher by 10%  # a complex example passing multiple trends and plural phrases headline(   35, 30,   headline =     \"We had {an_increase} of {delta} {people}.     That is {delta} {more} {employees} \\\\     than the same time last year ({orig_values}).\",   trend_phrases = list(     an_increase = trend_terms(\"an increase\", \"a decrease\"),     more = trend_terms(\"more\", \"less\")   ),   plural_phrases =     list(       people = plural_phrasing(\"person\", \"people\"),       employees = plural_phrasing(\"employee\", \"employees\")     ) ) #> We had an increase of 5 people. #> That is 5 more employees than the same time last year (35 vs. 30)."},{"path":"/reference/view_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Compact view of list values — view_list","title":"Compact view of list values — view_list","text":"Compact view list values","code":""},{"path":"/reference/view_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compact view of list values — view_list","text":"","code":"view_list(x)"},{"path":"/reference/view_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compact view of list values — view_list","text":"x vector list transposed","code":""},{"path":"/reference/view_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compact view of list values — view_list","text":"Returns data frame display list vector vertically.","code":""},{"path":[]},{"path":"/reference/view_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compact view of list values — view_list","text":"","code":"compare_values(10, 8) |>   view_list() #>                        value #> x                         10 #> y                          8 #> delta                      2 #> delta_p                   25 #> article_delta            a 2 #> article_delta_p         a 25 #> raw_delta                  2 #> raw_delta_p               25 #> article_raw_delta        a 2 #> article_raw_delta_p     a 25 #> sign                       1 #> orig_values         10 vs. 8 #> trend               increase  add_article(c(1,8,10, 11, 18)) |>   view_list() #>   value #> 1   a 1 #> 2  an 8 #> 3  a 10 #> 4 an 11 #> 5 an 18"},{"path":"/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with headliner","title":"Getting help with headliner","text":"Thanks using headliner! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with headliner","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with headliner","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with headliner","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"/news/index.html","id":"headliner-003","dir":"Changelog","previous_headings":"","what":"headliner 0.0.3","title":"headliner 0.0.3","text":"Patch fix ahead dplyr 1.1.0 (#121) Reformat NEWS.md headers (#117)","code":""},{"path":"/news/index.html","id":"headliner-002","dir":"Changelog","previous_headings":"","what":"headliner 0.0.2","title":"headliner 0.0.2","text":"CRAN release: 2022-06-26","code":""},{"path":"/news/index.html","id":"new-features-0-0-2","dir":"Changelog","previous_headings":"","what":"New Features","title":"headliner 0.0.2","text":"add_headline_column() now allows headlines passed existing column (#113)","code":""},{"path":"/news/index.html","id":"bug-fixes-0-0-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"headliner 0.0.2","text":"headline() longer throws error NA (#110) compare_values() give informative error length x y > 1 (#110)","code":""},{"path":"/news/index.html","id":"other-0-0-2","dir":"Changelog","previous_headings":"","what":"Other","title":"headliner 0.0.2","text":"\"\" argument removed trend_terms() utilized (#115)","code":""},{"path":"/news/index.html","id":"headliner-001","dir":"Changelog","previous_headings":"","what":"headliner 0.0.1","title":"headliner 0.0.1","text":"CRAN release: 2022-06-02 Initial release","code":""}]
